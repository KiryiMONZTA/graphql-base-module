name: CI

on:
    - push
    - pull_request

env:
    DEFAULT_COMPOSER_FLAGS: --no-interaction --no-ansi --no-progress --no-suggest --prefer-dist --no-plugins

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                php:
                    - "7.4"
                    - "8.0"
                env:
                    - DEPENDENCIES=""
                    - DEPENDENCIES=" --prefer-lowest"

        steps:
            - name: Checkout graphql-base
              uses: actions/checkout@v2

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  coverage: xdebug

            - name: Install dependencies
              run: composer update $DEFAULT_COMPOSER_FLAGS $DEPENDENCIES

            - name: Generated Unified Namespace
              run: ./vendor/bin/oe-eshop-unified_namespace_generator

            - name: Test syntax
              run: composer test:syntax

            - name: Lint
              run: composer test:lint

            - name: Unit Tests
              run: |
                  vendor/bin/phpunit -c tests/phpunit.xml tests/Unit/ --coverage-clover clover.xml
                  sed -i 's/\/home\/runner\/work\/graphql-base-module\/graphql-base-module\///' clover.xml

            - name: Infection
              continue-on-error: true
              run: composer test:infection

            - name: Static analysis
              if: ${{ matrix.php == '8.0' && env.DEPENDENCIES == '' }}
              run: composer test:static

            - uses: satackey/action-docker-layer-caching@v0.0.11
              continue-on-error: true
              with:
                  key: docker-layer-caching-${{ github.workflow }}-${{ matrix.php }}-{hash}
                  restore-keys: |
                      docker-layer-caching-${{ github.workflow }}-${{ matrix.php }}-

            - name: Build docker for 6.4.x
              run: |
                  cd /home/runner/work/
                  git clone --depth 1 https://github.com/OXID-eSales/docker-eshop-sdk.git
                  cd docker-eshop-sdk
                  make .env
                  sed "s/PHP_VERSION=.*/PHP_VERSION=${{ matrix.php }}/" -i .env
                  git clone --depth 1 https://github.com/OXID-eSales/oxideshop_ce.git --branch b-6.4.x --single-branch data/oxideshop
                  mkdir data/oxideshop/debug
                  make permissions
                  make data/oxideshop/vendor/
                  make data/oxideshop/source/config.inc.php
                  docker-compose up -d php
                  sleep 10
                  make reset-db

            - name: Prepare shop and run codeception in docker
              run: |
                  cd /home/runner/work/docker-eshop-sdk/data/oxideshop/
                  cp -r $GITHUB_WORKSPACE graphql-base-module
                  docker-compose exec -T --user oxid php composer config repositories.grapqhl-base path ./graphql-base-module/
                  docker-compose exec -T --user oxid php composer require oxid-esales/graphql-base
                  docker-compose exec -T --user oxid php composer require codeception/module-rest:*
                  docker-compose exec -T --user oxid php composer require codeception/module-phpbrowser --dev
                  docker-compose exec -T --user oxid php php bin/oe-console oe:module:install-configuration source/modules/oe/graphql-base/
                  docker-compose exec -T --user oxid php php bin/oe-console oe:module:activate oe_graphql_base
                  docker-compose exec -T --user oxid php composer require codeception/c3 --dev
                  sed -i 's/<?php/<?php\n\nrequire(__DIR__ . "\/..\/c3.php");/' source/bootstrap.php
                  docker-compose exec -T --user oxid php vendor/bin/codecept -c vendor/oxid-esales/graphql-base/tests/ run --coverage-xml
                  sed -i 's/\/var\/www\/oxideshop\/graphql-base-module\///' vendor/oxid-esales/graphql-base/tests/Codeception/_output/OxidEsales.GraphQL.Base.Tests.Codeception.acceptance.remote.coverage.xml
                  cp vendor/oxid-esales/graphql-base/tests/Codeception/_output/OxidEsales.GraphQL.Base.Tests.Codeception.acceptance.remote.coverage.xml $GITHUB_WORKSPACE/coverage.xml

            - name: SonarCloud Scan
              if: ${{ matrix.php == '8.0' && env.DEPENDENCIES == '' }}
              uses: sonarsource/sonarcloud-github-action@master
              env:
                 GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                 SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
